def cnt(Str, p):
    result = 0;
    for i in range(len(str)):
        sub = str[i:i+len(p)]
        if sub == p:
            result += 1
    return result
str = "abdcabcabca"
p1 = "ca"
p2 = "ab"
print(f'ab{cnt(str,p1)} ca{cnt(str,p2)}')

"""
풀이:
내가 이 문제를 이해하기로는
len(str) = 11이기때문에
i가 0~11까지 비교를함
sub = str[i:i+2]이기 때문에
i 가 0에서 11까지 substr기준으로 두글자씩 앞에서부터 맨뒤까지 순회비교를함
이때 sub == p 이면 result 값에 1 을 더함
파이썬의 ==는 참조비교가아닌 값 비교이기때문에 문자열이 같은지 보면됨
p1일 경우 str안에 ca가 3번 반복되고
p2의 경우 str 안에 ab가 3번 반복되어 각각 cnt ㅏ값은 3임

추가로 print함수에서 f'ab 는 문자열은 그대로 출력, 함수는실행값을 출력하여
ab3 ca3이 나옴

종합:
문자열 길이는 11이고, 비교할 패턴 길이는 2이므로 총 10번 슬라이싱이 발생한다.
슬라이싱된 두 글자(sub)와 패턴(p)을 값 비교하여 같으면 카운트한다.
파이썬의 ==는 참조 비교가 아닌 값 비교이므로 문자열 내용이 같으면 True가 된다.
"abdcabcabca" 문자열에서 "ab"와 "ca"는 각각 3번씩 등장하므로, 출력은 ab3 ca3이 된다.

"""